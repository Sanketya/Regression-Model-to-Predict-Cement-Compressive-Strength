                            ‚≠ê Regression Model to Predict Cement Compressive Strengt
                            
                            
In[]:   # import library
          import pandas as pd
          import seaborn as sns
          import numpy as np
     

In []:   # import data
           cement = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/Concrete%20Compressive%20Strength.csv')
     

In[]:    # view data
         cement.head()
     

In[]:   # info of data
         cement.info()
     

In[]:   # summary statistics
         cement.describe()
     

In[]:   # check for missing value
         cement.isnull().sum()
     
In[]:   # check for categories
         cement.nunique()
     

In[]:   # visualize pairplot
        sns.pairplot(cement)
     

In[]:   # columns name
         cement.columns
     

In[]:    # define y
        y = cement['Concrete Compressive Strength(MPa, megapascals) ']
     

In[]:    # define X
        X = cement[['Cement (kg in a m^3 mixture)',
                        'Blast Furnace Slag (kg in a m^3 mixture)',
                        'Fly Ash (kg in a m^3 mixture)', 'Water (kg in a m^3 mixture)',
                        'Superplasticizer (kg in a m^3 mixture)',
                        'Coarse Aggregate (kg in a m^3 mixture)',
                        'Fine Aggregate (kg in a m^3 mixture)', 'Age (day)']]
     


In[]:    # split data

        from sklearn.model_selection import train_test_split

       X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, random_state=2529)
     

In[]:  # verify shape
       X_train.shape, X_test.shape, y_train.shape, y_test.shape
     

In[]:  # select model

     from sklearn.linear_model import LinearRegression

      model = LinearRegression()
     

In[]:  # train model

       model.fit(X_train, y_train)
     

In[]:   # predict with model

      y_pred = model.predict(X_test)
     

In[]:  # model evaluation
       y_pred
     

In[]:   # model MAE
      from sklearn.metrics import mean_absolute_error

       mean_absolute_error(y_test, y_pred)
     
Out[]:   8.683767775410706
In[]:   # model MAPE

     from sklearn.metrics import mean_absolute_percentage_error

      mean_absolute_percentage_error(y_test, y_pred)
     

In[]:  # model MSE
       from sklearn.metrics import mean_squared_error

       mean_squared_error(y_test, y_pred)
     

In[]:   # future prediction
       model.predict([[540,0,0,162,2.5,1040,676,28]])
     

In[]:  # define X_new

cement.columns

X_new = [[['Cement (kg in a m^3 mixture)',540],['Blast Furnace Slag (kg in a m^3 mixture)',0],
          ['Fly Ash (kg in a m^3 mixture)',0],['Water (kg in a m^3 mixture)',162],['Superplasticizer (kg in a m^3 mixture)',2.5],
          ['Coarse Aggregate (kg in a m^3 mixture)',1040],['Fine Aggregate (kg in a m^3 mixture)',676],['Age (day)',28]]]
X_new = np.array([540,0,0,162,2.5,1040,676,28]).reshape(-1,8)
X_new.shape
     

In[]:  # predict for X_new
model.predict(X_new)
                                
                            
